name: 'Terraform Diagram Generation'

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  generate-diagram:
    name: 'Generate Terraform Diagram'
    runs-on: ubuntu-latest
    container:
      image: im2nguyen/rover:latest
      options: --entrypoint=""
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Environment
      run: |
        apk add --no-cache jq curl gettext coreutils sed aws-cli
    
    - name: Generate Diagram
      run: |
        echo "Generating infrastructure diagram with Rover..."
        
        # Create output directory
        mkdir -p diagrams
        
        # Generate diagram using Rover
        cd terraform
        rover --workingDir=. --output=../diagrams/infrastructure-diagram.svg
        cd ..
        
        echo "Diagram generation complete!"
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Upload diagram to S3
      run: |
        echo "Uploading diagram to S3 bucket..."
        
        # Add timestamp to filename to prevent overwrites
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        DIAGRAM_FILENAME="infrastructure-diagram-${TIMESTAMP}.svg"
        
        # Copy the file with the timestamped name
        cp diagrams/infrastructure-diagram.svg "diagrams/${DIAGRAM_FILENAME}"
        
        # Create separate directory for diagrams in S3 bucket
        aws s3 cp diagrams/ s3://iykonect-aws-parallel/diagrams/ --recursive
        
        echo "Diagram uploaded successfully to s3://iykonect-aws-parallel/diagrams/${DIAGRAM_FILENAME}"