#cloud-config
package_update: true
package_upgrade: true

packages:
  - awscli
  - jq
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - htop
  - unzip
  
write_files:
  - path: /opt/bootstrap.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e
      
      # Logging function
      log() {
          echo "[$(date)] $1" | sudo tee -a /var/log/bootstrap.log
      }
      
      # Set AWS credentials for ECR access
      log "Setting AWS credentials for ECR access"
      export AWS_ACCESS_KEY_ID="${aws_access_key}"
      export AWS_SECRET_ACCESS_KEY="${aws_secret_key}"
      export AWS_DEFAULT_REGION="${aws_region}"
      
      # Create AWS credentials directory and file
      mkdir -p /home/${admin_username}/.aws
      cat > /home/${admin_username}/.aws/credentials << EOC
      [default]
      aws_access_key_id = ${aws_access_key}
      aws_secret_access_key = ${aws_secret_key}
      region = ${aws_region}
      EOC
      
      # Create AWS config file
      cat > /home/${admin_username}/.aws/config << EOC
      [default]
      region = ${aws_region}
      output = json
      EOC
      
      # Set correct ownership and permissions
      chown -R ${admin_username}:${admin_username} /home/${admin_username}/.aws
      chmod 600 /home/${admin_username}/.aws/credentials
      chmod 600 /home/${admin_username}/.aws/config
      
      # Also set up root AWS credentials for system-level operations
      mkdir -p /root/.aws
      cp /home/${admin_username}/.aws/credentials /root/.aws/
      cp /home/${admin_username}/.aws/config /root/.aws/
      chmod 600 /root/.aws/credentials
      chmod 600 /root/.aws/config
      
      # Create directories for the repository
      log "Creating directories for repository..."
      mkdir -p /opt/iykonect-aws-repo
      mkdir -p /opt/iykonect/config
      mkdir -p /opt/iykonect/env
      mkdir -p /opt/iykonect/prometheus
      mkdir -p /opt/iykonect/grafana
      
      # Download code from AWS S3
      log "Downloading code repository from AWS S3..."
      aws s3 cp s3://iykonect-aws-parallel/code-deploy/repo-content.zip /tmp/repo-content.zip
      if [ $? -ne 0 ]; then
          log "ERROR: Failed to download repository content from S3."
          exit 1
      fi
      
      # Extract repository content
      log "Extracting repository content to /opt/iykonect-aws-repo..."
      unzip -q /tmp/repo-content.zip -d /opt/iykonect-aws-repo
      rm -f /tmp/repo-content.zip
      
      # Set execute permissions on all shell scripts
      log "Setting execute permissions on scripts..."
      find /opt/iykonect-aws-repo -name "*.sh" -exec chmod +x {} \;
      
      # Create symlinks to the script directory for easier access
      mkdir -p /opt/iykonect-aws
      ln -sf /opt/iykonect-aws-repo/terraform-azure/modules/vm/scripts/azure-monitor-setup.sh /opt/iykonect-aws/
      ln -sf /opt/iykonect-aws-repo/terraform-azure/modules/vm/scripts/container-health-check.sh /opt/iykonect-aws/
      ln -sf /opt/iykonect-aws-repo/terraform-azure/modules/vm/scripts/docker-setup.sh /opt/iykonect-aws/
      ln -sf /opt/iykonect-aws-repo/terraform-azure/modules/vm/scripts/redeploy.sh /opt/iykonect-aws/
      
      # Also create symlinks to the AWS scripts that might be needed
      ln -sf /opt/iykonect-aws-repo/terraform/modules/ec2/scripts/secrets-setup.sh /opt/iykonect-aws/
      ln -sf /opt/iykonect-aws-repo/terraform/modules/ec2/scripts/status-setup.sh /opt/iykonect-aws/
      
      # Install Azure CLI for better integration
      log "Installing Azure CLI..."
      curl -sL https://aka.ms/InstallAzureCLIDeb | bash
      
      # Execute status command setup
      log "Running status command setup..."
      /opt/iykonect-aws-repo/terraform/modules/ec2/scripts/status-setup.sh
      
      # Execute Secret Manager setup (using AWS Secrets Manager as requested)
      log "Running AWS Secrets Manager setup..."
      /opt/iykonect-aws-repo/terraform/modules/ec2/scripts/secrets-setup.sh
      
      # Execute Azure Monitor setup
      log "Running Azure Monitor setup..."
      /opt/iykonect-aws-repo/terraform-azure/modules/vm/scripts/azure-monitor-setup.sh
      
      # Execute Docker setup
      log "Running Docker setup and deployment..."
      /opt/iykonect-aws-repo/terraform-azure/modules/vm/scripts/docker-setup.sh
      
      log "=== Bootstrap complete ==="
      
runcmd:
  - 'curl -sL https://aka.ms/InstallAzureMonitorLinuxAgent | sudo bash'
  - '/opt/bootstrap.sh > /var/log/bootstrap.log 2>&1'